{"version":3,"sources":["styles/customTheme.js","constants/index.js","api/axios.js","components/pages/Main/index.js","components/atoms/RadioInput/index.js","components/atoms/CheckboxInput/index.js","components/atoms/TextInput/index.js","components/molecules/FormInput/index.js","components/atoms/ScrollToButton/index.js","components/organisms/SurveyForm/index.js","components/atoms/SuccessScreen/index.js","components/pages/Survey/index.js","components/atoms/Header/index.js","components/atoms/Footer/index.js","App.js","serviceWorker.js","index.js","assets/images/logo.png"],"names":["createMuiTheme","palette","primary","main","secondary","text","red","success","sizes","headerHeight","FORM_INPUT_TYPES","axios","create","baseURL","timeout","useStyles","makeStyles","theme","title","fontSize","fontWeight","color","Main","useState","surveys","setSurveys","history","useHistory","useEffect","get","then","response","data","classes","map","item","index","Box","m","key","Paper","variant","p","Typography","className","Button","onClick","push","survey_id","LinearProgress","RadioInput","answers","onChange","value","setValue","FormControl","component","RadioGroup","e","target","answer","FormControlLabel","label","control","Radio","CheckboxInput","FormGroup","Checkbox","input","width","TextInput","Input","placeholder","question","additionalInfo","FormInputByType","type","toString","FormInput","fab","position","bottom","right","ScrollToButton","scrolled","setScrolled","window","onscroll","innerHeight","scrollY","document","body","offsetHeight","Fab","scrollTo","top","scrollHeight","behavior","root","margin","surveyTitle","SurveyForm","survey","handleSubmit","handleInputChange","val","console","log","minHeight","height","fill","button","SuccessScreen","onStartNew","display","flexDirection","justifyContent","alignItems","Survey","match","setSurvey","submitted","setSubmitted","setAnswerData","params","header","textDecoration","textBox","marginLeft","lineHeight","Header","AppBar","Toolbar","href","src","logoSrc","alt","footer","Footer","Date","getFullYear","paddingTop","App","ThemeProvider","customTheme","Container","maxWidth","path","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.333d94d6.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  palette: {\n    primary: { main: '#176c81' },\n    secondary: { main: '#ffeeee' },\n    text: { main: '#1c1c1c', red: '#960303' },\n    success: { main: '#319d13' },\n  },\n  sizes: { headerHeight: 56 },\n});\n","export const baseURL = 'https://www.irg.org.ua/surv-admin/api/';\n//export const baseURL = 'http://192.168.64.2/surv-api';\n\nexport const FORM_INPUT_TYPES = {\n  radio: '0',\n  checkbox: '1',\n  text: '2',\n};\n","import axios from 'axios';\nimport { baseURL } from '../constants';\n\nexport default axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n});\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from '../../../api/axios';\nimport { LinearProgress, Typography, Box, makeStyles, Paper, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontSize: '1.2em',\n    fontWeight: 'bold',\n    color: theme.palette.text.main,\n  },\n}));\n\nconst Main = () => {\n  const [surveys, setSurveys] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    axios.get('surveys.php').then(response => {\n      setSurveys(response.data);\n    });\n  }, []);\n\n  const classes = useStyles();\n\n  return surveys ? (\n    surveys.map((item, index) => (\n      <Box m=\"16px 0\" key={index}>\n        <Paper variant=\"outlined\">\n          <Box p={2}>\n            <Box m=\"0 0 14px 0\">\n              <Typography className={classes.title}>Опрос: {item.title}</Typography>\n            </Box>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => history.push(`/survey/${item.survey_id}`)}\n            >\n              Начать опрос\n            </Button>\n          </Box>\n        </Paper>\n      </Box>\n    ))\n  ) : (\n    <LinearProgress />\n  );\n};\n\nexport default Main;\n","import React, { useState } from 'react';\nimport { FormControl, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nconst RadioInput = ({ answers, onChange }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    onChange(e.target.value);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup value={value} onChange={handleChange}>\n        {answers.map((answer, index) => (\n          <FormControlLabel\n            key={index}\n            value={answer}\n            label={answer}\n            control={<Radio color=\"primary\" />}\n          />\n        ))}\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default RadioInput;\n","import React, { useState } from 'react';\nimport { FormControl, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\n\nconst CheckboxInput = ({ answers, onChange }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    onChange(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <FormGroup>\n        {answers.map((answer, index) => (\n          <FormControlLabel key={index} control={<Checkbox color=\"primary\" />} label={answer} />\n        ))}\n      </FormGroup>\n    </FormControl>\n  );\n};\n\nexport default CheckboxInput;\n","import React, { useState } from 'react';\nimport { Input, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    width: '100%',\n  },\n}));\n\nconst TextInput = ({ onChange }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    onChange(e.target.value);\n  };\n\n  const classes = useStyles();\n  return (\n    <Input\n      className={classes.input}\n      value={value}\n      onChange={handleChange}\n      placeholder=\"Ваш ответ\"\n    />\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport RadioInput from '../../atoms/RadioInput';\nimport CheckboxInput from '../../atoms/CheckboxInput';\nimport TextInput from '../../atoms/TextInput';\nimport { FORM_INPUT_TYPES } from '../../../constants';\nimport { Typography, Box, makeStyles, Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  question: {\n    fontSize: '1em',\n    fontWeight: 'bold',\n    color: theme.palette.text.main,\n  },\n  additionalInfo: {\n    fontSize: '0.8em',\n    fontWeight: 'bold',\n    color: theme.palette.text.red,\n  },\n}));\n\nconst FormInputByType = ({ type, answers, onChange }) => {\n  switch (type.toString()) {\n    case FORM_INPUT_TYPES.radio:\n      return <RadioInput answers={answers} onChange={onChange} />;\n    case FORM_INPUT_TYPES.checkbox:\n      return <CheckboxInput answers={answers} onChange={onChange} />;\n    case FORM_INPUT_TYPES.text:\n      return <TextInput onChange={onChange} />;\n    default:\n      return null;\n  }\n};\n\nconst FormInput = ({ title, type, additionalInfo, answers, onChange }) => {\n  const classes = useStyles();\n\n  return (\n    <Box m=\"16px 0\">\n      <Paper variant=\"outlined\">\n        <Box p={2}>\n          <Box m=\"0 0 14px 0\">\n            <Typography className={classes.question}>{title}</Typography>\n            {additionalInfo && (\n              <Typography className={classes.additionalInfo}>{additionalInfo}</Typography>\n            )}\n          </Box>\n          <FormInputByType type={type} answers={answers} onChange={onChange} />\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default FormInput;\n","import React, { useState } from 'react';\nimport { Fab, makeStyles } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n  },\n}));\n\nconst ScrollToButton = () => {\n  const [scrolled, setScrolled] = useState(false);\n\n  window.onscroll = () => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 200) {\n      setScrolled(true);\n    } else {\n      setScrolled(false);\n    }\n  };\n\n  const handleBottomScroll = () => {\n    window.scrollTo({ top: document.body.scrollHeight, behavior: 'smooth' });\n  };\n\n  const classes = useStyles();\n  return !scrolled ? (\n    <Fab className={classes.fab} color=\"primary\" onClick={handleBottomScroll}>\n      <ArrowDownwardIcon />\n    </Fab>\n  ) : null;\n};\n\nexport default ScrollToButton;\n","import React from 'react';\nimport FormInput from '../../molecules/FormInput';\nimport ScrollToButton from '../../atoms/ScrollToButton';\nimport { Box, Typography, makeStyles, Paper, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '12px 0',\n  },\n  surveyTitle: {\n    fontSize: '1.6em',\n  },\n}));\n\nconst SurveyForm = ({ survey, handleSubmit }) => {\n  const classes = useStyles();\n\n  const handleInputChange = val => {\n    console.log(val);\n  };\n\n  return (\n    <Box className={classes.root}>\n      <Paper variant=\"outlined\">\n        <Box p={2}>\n          <Typography className={classes.surveyTitle} component=\"h2\">\n            Опрос: {survey.title}\n          </Typography>\n        </Box>\n      </Paper>\n      {survey.survey.map((item, index) => (\n        <FormInput\n          key={index}\n          type={item.type}\n          answers={item.answer}\n          title={item.text}\n          additionalInfo={item.title}\n          onChange={handleInputChange}\n        />\n      ))}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Отправить\n      </Button>\n      <ScrollToButton />\n    </Box>\n  );\n};\n\nexport default SurveyForm;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box, Typography, Button, makeStyles } from '@material-ui/core';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    minHeight: `calc(100vh - ${theme.sizes.headerHeight}px - 50px)`,\n    '& > svg': {\n      width: 56,\n      height: 56,\n      fill: theme.palette.success.main,\n    },\n    '& > h2': {\n      fontSize: '1.2em',\n      margin: '16px 0',\n    },\n  },\n  button: {\n    margin: '16px 0 0 0',\n  },\n}));\n\nconst SuccessScreen = ({ onStartNew }) => {\n  const history = useHistory();\n\n  const classes = useStyles();\n  return (\n    <Box\n      className={classes.success}\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <DoneIcon />\n      <Typography component=\"h2\">Ответ успешно записан</Typography>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => history.push('/')}\n        >\n          Перейти к выбору опроса\n        </Button>\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={onStartNew}>\n          Начать опрос заново\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SuccessScreen;\n","import React, { useState, useEffect } from 'react';\nimport axios from '../../../api/axios';\nimport { LinearProgress } from '@material-ui/core';\nimport SurveyForm from '../../organisms/SurveyForm';\nimport SuccessScreen from '../../atoms/SuccessScreen';\n\nconst Survey = ({ match }) => {\n  const [survey, setSurvey] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [answerData, setAnswerData] = useState({});\n\n  useEffect(() => {\n    axios.get(`surveys.php?id=${match.params.survey_id}`).then(response => {\n      setSurvey(response.data);\n    });\n  }, []);\n\n  const onSubmit = () => {\n    setAnswerData({});\n    setSubmitted(true);\n  };\n\n  return (\n    <>\n      {!submitted && !survey && <LinearProgress />}\n      {!submitted && survey && <SurveyForm survey={survey} handleSubmit={onSubmit} />}\n      {submitted && <SuccessScreen onStartNew={() => setSubmitted(false)} />}\n    </>\n  );\n};\n\nexport default Survey;\n","import React from 'react';\nimport logoSrc from '../../../assets/images/logo.png';\nimport { AppBar, Toolbar, makeStyles, Typography, Box } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    height: theme.sizes.headerHeight,\n    '& > div': {\n      height: theme.sizes.headerHeight,\n      minHeight: theme.sizes.headerHeight,\n    },\n    '& a': {\n      textDecoration: 'none!important',\n    },\n  },\n  textBox: {\n    marginLeft: 8,\n    '& > p': {\n      fontSize: '0.8em',\n      lineHeight: 1,\n      color: `${theme.palette.secondary.main}!important`,\n    },\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.header} component=\"header\">\n      <Toolbar>\n        <Box display=\"flex\" component=\"a\" href=\"/\">\n          <img src={logoSrc} width={42} height={42} alt=\"IRG\" />\n          <Box className={classes.textBox}>\n            <Typography>Independent</Typography>\n            <Typography>Research</Typography>\n            <Typography>Group</Typography>\n          </Box>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Typography, Box, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  footer: {\n    '& > small': {\n      fontSize: '0.75em',\n    },\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.footer} component=\"footer\" display=\"flex\" justifyContent=\"center\" m={2}>\n      <Typography component=\"small\">© {new Date().getFullYear()} IRG</Typography>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Container, makeStyles, ThemeProvider } from '@material-ui/core';\nimport customTheme from './styles/customTheme';\nimport Main from './components/pages/Main';\nimport Survey from './components/pages/Survey';\nimport Header from './components/atoms/Header';\nimport Footer from './components/atoms/Footer';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    paddingTop: 56,\n    minHeight: `calc(100vh - 56px)`,\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <Header position=\"sticky\" />\n      <Container className={classes.root} maxWidth=\"md\" component=\"main\">\n        <Router>\n          <Switch>\n            <Route path=\"/survey/:survey_id\" component={Survey} />\n            <Route path=\"/\" component={Main} />\n          </Switch>\n        </Router>\n      </Container>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.dfb4f450.png\";"],"sourceRoot":""}